"0","library(shiny)"
"0","library(dplyr)"
"0","library(stringr)"
"0","library(highcharter)"
"0","library(viridis)"
"0","library(tidyr)"
"0","library(bslib)"
"2","G3;
Attaching package: â€˜bslibâ€™

g"
"2","G3;The following object is masked from â€˜package:utilsâ€™:

    page

g"
"0","# Helper: assign rating levels for pie chart"
"0","get_rating_level <- function(rating) {"
"0","  if (rating >= 9) return(""Excellent"")"
"0","  if (rating >= 8) return(""Great"")"
"0","  if (rating >= 7) return(""Good"")"
"0","  return(""Others"")"
"0","}"
"0","imdb$Rating_Level <- sapply(imdb$IMDB_Rating, get_rating_level)"
"0",""
"0","# Unique genres for dropdown"
"0","all_genres <- sort(unique(unlist(strsplit(paste(imdb$Genre, collapse = "", ""), "", ""))))"
"0",""
"0","ui <- fluidPage("
"0","  theme = bs_theme("
"0","    version = 5,"
"0","    bootswatch = ""flatly"","
"0","    base_font = font_google(""Roboto""),"
"0","    primary = ""#21908CFF"""
"0","  ),"
"0","  tags$head(tags$style(HTML("""
"0","    body { background: #16171c; }"
"0","    .main-panel { background: #16171c; }"
"0","    .chart-container { "
"0","      background: #212226; "
"0","      border-radius: 12px; "
"0","      padding: 10px; "
"0","      margin-bottom: 15px;"
"0","      "
"0","    }"
"0","    .well, .panel, .form-control { border-radius: 6px; }"
"0","    .highcharts-title, .highcharts-subtitle {"
"0","      font-family: 'Roboto', sans-serif;"
"0","      font-weight: 500;"
"0","      color: #ffffff !important;"
"0","    }"
"0","  ""))),"
"0","  titlePanel("
"0","    div("
"0","      style=""color:#ffffff; font-family: 'Roboto', sans-serif; font-size:32px; font-weight:600;"","
"0","    )"
"0","  ),"
"0","  sidebarLayout("
"0","    sidebarPanel("
"0","      selectizeInput("
"0","        ""genreInput"", ""Select Genre:"","
"0","        choices = all_genres,"
"0","        selected = ""Drama"","
"0","        options = list("
"0","          placeholder = ""Type or select a genre..."","
"0","          maxOptions = 30"
"0","        )"
"0","      ),"
"0","      sliderInput("
"0","        ""ratingInput"", ""IMDB Rating:"","
"0","        min = 7, max = 10, value = c(8, 10), step = 0.1"
"0","      ),"
"0","      style = ""background-color: #212226; color: #ffffff; border-radius: 8px; margin-bottom: 12px;"""
"0","    ),"
"0","    mainPanel("
"0","      fluidRow("
"0","        column(6, "
"0","          div(class = ""chart-container"", highchartOutput(""barPlot"", height = ""400px""))"
"0","        ),"
"0","        column(6, "
"0","          div(class = ""chart-container"", highchartOutput(""linePlot"", height = ""400px""))"
"0","        )"
"0","      ),"
"0","      fluidRow("
"0","        column(6, "
"0","          div(class = ""chart-container"", highchartOutput(""histPlot"", height = ""400px""))"
"0","        ),"
"0","        column(6, "
"0","          div(class = ""chart-container"", highchartOutput(""piePlot"", height = ""400px""))"
"0","        )"
"0","      )"
"0","    )"
"0","  )"
"0",")"
"0",""
"0","server <- function(input, output) {"
"0","  genre_filtered <- reactive({"
"0","    imdb %>%"
"0","      filter(str_detect(Genre, fixed(input$genreInput))) %>%"
"0","      filter(IMDB_Rating >= input$ratingInput[1], IMDB_Rating <= input$ratingInput[2])"
"0","  })"
"0","  "
"0","  output$barPlot <- renderHighchart({"
"0","    top_directors <- genre_filtered() %>%"
"0","      group_by(Director) %>%"
"0","      summarize(n = n()) %>%"
"0","      arrange(desc(n)) %>%"
"0","      slice_head(n=10)"
"0","    custom_colors <- viridis::viridis(10, option = ""D"", end = 0.85)"
"0","    highchart() %>%"
"0","      hc_chart(type = ""bar"", backgroundColor = ""#212226"") %>%"
"0","      hc_add_series("
"0","        data = top_directors$n,"
"0","        name = ""Number of Movies"","
"0","        colorByPoint = TRUE,"
"0","        colors = custom_colors,"
"0","        borderColor = ""none"","
"0","        borderWidth = 0"
"0","      ) %>%"
"0","      hc_xAxis("
"0","        categories = top_directors$Director,"
"0","        title = list(text = ""Director"", style = list(color = ""#ffffff"")),"
"0","        labels = list(style = list(color = ""#ffffff"")),"
"0","        gridLineColor = ""#212226"""
"0","      ) %>%"
"0","      hc_yAxis("
"0","        labels = list(style = list(color = ""#ffffff"")),"
"0","        gridLineColor = ""#333333"""
"0","      ) %>%"
"0","      hc_title(text = paste(""Top Directors in"", input$genreInput), style = list(color = ""white"")) %>%"
"0","      hc_add_theme(hc_theme_flat())"
"0","  })"
"0","  "
"0","  output$linePlot <- renderHighchart({"
"0","    avg_rating_year <- genre_filtered() %>%"
"0","      group_by(Released_Year) %>%"
"0","      summarize(Avg_Rating = mean(IMDB_Rating, na.rm=TRUE))"
"0","    highchart() %>%"
"0","      hc_chart(type = ""line"", backgroundColor = ""#212226"") %>%"
"0","      hc_add_series("
"0","        data = avg_rating_year$Avg_Rating,"
"0","        name = ""Average Rating"","
"0","        color = ""#00b374""  # Neon blue color"
"0","      ) %>%"
"0","      hc_xAxis("
"0","        categories = avg_rating_year$Released_Year,"
"0","        title = list(text = ""Year"", style = list(color = ""#ffffff"")),"
"0","        labels = list(style = list(color = ""#ffffff"")),"
"0","        gridLineColor = ""#333333"""
"0","      ) %>%"
"0","      hc_yAxis("
"0","        labels = list(style = list(color = ""#ffffff"")),"
"0","        gridLineColor = ""#212226"""
"0","      ) %>%"
"0","      hc_title(text = paste(""Yearly Avg Rating for"", input$genreInput), style = list(color = ""white"")) %>%"
"0","      hc_add_theme(hc_theme_flat())"
"0","  })"
"0","  "
"0","  output$histPlot <- renderHighchart({"
"0","    req(nrow(genre_filtered()) > 0)"
"0","    breaks <- seq(floor(min(genre_filtered()$IMDB_Rating, na.rm=TRUE)),"
"0","                  ceiling(max(genre_filtered()$IMDB_Rating, na.rm=TRUE)), by = 0.2)"
"0","    hist_data <- hist(genre_filtered()$IMDB_Rating, breaks = breaks, plot = FALSE)"
"0","    custom_hist_colors <- viridis::viridis(length(hist_data$counts), option = ""D"", end = 0.85)"
"0","    highchart() %>%"
"0","      hc_chart(type = ""column"", backgroundColor = ""#212226"") %>%"
"0","      hc_add_series("
"0","        data = hist_data$counts,"
"0","        name = ""Count"","
"0","        colorByPoint = TRUE,"
"0","        colors = custom_hist_colors,"
"0","        borderColor = ""none"","
"0","        borderWidth = 0,"
"0","        pointPadding = 0,"
"0","        groupPadding = 0"
"0","      ) %>%"
"0","      hc_xAxis("
"0","        categories = round(hist_data$mids, 2),"
"0","        title = list(text = ""IMDB Rating"", style = list(color = ""#ffffff"")),"
"0","        labels = list(style = list(color = ""#ffffff"")),"
"0","        gridLineColor = ""#333333"""
"0","      ) %>%"
"0","      hc_yAxis("
"0","        title = list(text = ""Count"", style = list(color = ""#ffffff"")),"
"0","        labels = list(style = list(color = ""#ffffff"")),"
"0","        gridLineColor = ""#212226"""
"0","      ) %>%"
"0","      hc_title(text = paste(""Rating Distribution for"", input$genreInput), style = list(color = ""white"")) %>%"
"0","      hc_add_theme(hc_theme_flat())"
"0","  })"
"0","  "
"0","  output$piePlot <- renderHighchart({"
"0","  neon_cols <- c("
"0","    ""Excellent"" = ""#cc353c"",   "
"0","    ""Great""     = ""#5e0414"",   "
"0","    ""Good""      = ""#c701ae"",   "
"0","    ""Others""    = ""#747474""    "
"0","  )"
"0",""
"0","  dist <- genre_filtered() %>%"
"0","    count(Rating_Level, name = ""y"") %>%"
"0","    arrange(factor(Rating_Level, levels = names(neon_cols))) %>%"
"0","    mutate("
"0","      name  = Rating_Level,"
"0","      color = neon_cols[Rating_Level]"
"0","    )"
"0",""
"0","  highchart() %>%"
"0","    hc_chart(type = ""pie"", backgroundColor = ""#212226"") %>%"
"0","    hc_add_series("
"0","      data = list_parse(dist),"
"0","      colorByPoint = FALSE,"
"0","      borderColor = ""none"","
"0","      borderWidth = 0"
"0","    ) %>%"
"0","    hc_title("
"0","      text  = paste(""Rating Level Distribution in"", input$genreInput),"
"0","      style = list(color = ""white"")"
"0","    ) %>%"
"0","    hc_add_theme(hc_theme_flat())"
"0","  })"
"0",""
"0",""
"0",""
"0","}"
"0",""
"0","shinyApp(ui, server)"
"2","G3;
Listening on http://127.0.0.1:6557
g"
"2","G1;H1;Error during wrapuph: not that many frames on the stack
Error: no more error handlers available (recursive errors?); invoking 'abort' restart
g"
"2","G1;
g"
"2","G1;H1;Error during wrapuph: not that many frames on the stack
Error: no more error handlers available (recursive errors?); invoking 'abort' restart
g"
